{"version":3,"sources":["pages/Chat/components/Message.tsx","pages/Chat/Chat.tsx","App.tsx","index.tsx"],"names":["Message","name","text","className","Chat","messagesEndRef","useRef","firestore","useContext","Context","useState","userName","setUserName","message","setMessage","useCollectionData","collection","orderBy","messages","handleChangeTextarea","type","sendMessage","a","add","createdAt","firebase","FieldValue","serverTimestamp","useEffect","current","scrollIntoView","behavior","map","item","index","ref","placeholder","value","onChange","e","currentTarget","onClick","App","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createContext","ReactDOM","render","StrictMode","Provider","document","getElementById"],"mappings":"sUAQaA,EAA8B,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,KAAKC,EAAU,EAAVA,KAC9C,OACI,sBAAKC,UAAU,UAAf,UACI,qBAAKA,UAAU,YAAf,SAA4BF,IAC5B,qBAAKE,UAAU,OAAf,SAAuBD,QCHtBE,G,MAAiB,WAC1B,IAAMC,EAAiBC,iBAAuB,MACvCC,EAAaC,qBAAWC,GAAxBF,UAFyB,EAGAG,mBAAS,IAHT,mBAGzBC,EAHyB,KAGfC,EAHe,OAIFF,mBAAS,IAJP,mBAIzBG,EAJyB,KAIhBC,EAJgB,OAKbC,YACfR,EAAUS,WAAW,YAAYC,QAAQ,cADtCC,EALyB,oBAgB1BC,EAAuB,SAACjB,EAAckB,GACpC,cAAgBA,EAChBR,EAAYV,GACL,kBAAoBkB,GAC3BN,EAAWZ,IAkBbmB,EAAW,uCAAG,sBAAAC,EAAA,sDACC,KAAbX,GAA+B,KAAZE,IACnBN,EAAUS,WAAW,YAAYO,IAAI,CACjCtB,KAAMU,EACNT,KAAMW,EACNW,UAAWC,IAASlB,UAAUmB,WAAWC,oBAE7Cb,EAAW,KAPC,2CAAH,qDAajB,OAFAc,qBArBuB,WAAO,IAAD,EACzB,UAAAvB,EAAewB,eAAf,SAAwBC,eAAe,CAACC,SAAU,aAoB5B,CAACb,IAEtBA,EAKD,sBAAKf,UAAU,UAAf,UACI,sBAAKA,UAAU,WAAf,UACKe,EAASc,KAAI,SAACC,EAAMC,GAAP,OACV,cAAC,EAAD,CAAqBjC,KAAMgC,EAAKhC,KACvBC,KAAM+B,EAAK/B,MADNgC,MAGlB,qBAAKC,IAAK9B,OAEd,sBAAKF,UAAU,SAAf,UACI,0BAAUA,UAAU,YACViC,YAAY,8FACZC,MAAO1B,EACP2B,SAAU,SAAAC,GAAC,OAAIpB,EAAqBoB,EAAEC,cAAcH,MAAO,gBAErE,0BAAUlC,UAAU,gBACViC,YAAY,yDACZC,MAAOxB,EACPyB,SAAU,SAAAC,GAAC,OAAIpB,EAAqBoB,EAAEC,cAAcH,MAAO,oBAErE,qBAAKlC,UAAU,SACVsC,QAASpB,EADd,0EAvBD,O,MC9CAqB,MARf,WACE,OACE,qBAAKvC,UAAU,MAAf,SACE,cAAC,EAAD,O,MCANsB,IAASkB,cAAc,CACnBC,OAAQ,0CACRC,WAAY,+BACZC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGZ,IAAMzC,EAAU0C,wBAAmB,MACpC5C,EAAYkB,IAASlB,YAE3B6C,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC7C,EAAQ8C,SAAT,CAAkBlB,MAAO,CACrB9B,aADJ,SAGI,cAAC,EAAD,QAGRiD,SAASC,eAAe,W","file":"static/js/main.415b90d1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\ninterface IMessage {\r\n    name: string\r\n    text: string\r\n}\r\n\r\nexport const Message: React.FC<IMessage> = ({name,text}) => {\r\n    return (\r\n        <div className='message'>\r\n            <div className='user-name'>{name}</div>\r\n            <div className='text'>{text}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React, {useContext, useEffect, useRef, useState} from 'react'\r\nimport {useCollectionData} from \"react-firebase-hooks/firestore\";\r\nimport firebase from \"firebase\";\r\n\r\nimport {Message} from \"./components/Message\";\r\nimport {Context} from \"../../index\";\r\nimport './ChatStyle.css'\r\n\r\n\r\nexport const Chat: React.FC = () => {\r\n    const messagesEndRef = useRef<HTMLDivElement>(null)\r\n    const {firestore} = useContext(Context)\r\n    const [userName, setUserName] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    const [messages] = useCollectionData(\r\n        firestore.collection('messages').orderBy('createdAt')\r\n    )\r\n\r\n    /**\r\n     *\r\n     * @param {string} text Текст из textarea\r\n     * @param {string} type Вид textarea\r\n     * Определяет указанную зону ввода и добавляет текст в стейт\r\n     */\r\n\r\n    const handleChangeTextarea = (text: string, type: string): void => {\r\n        if ('user-name' === type) {\r\n            setUserName(text)\r\n        } else if ('input-message' === type) {\r\n            setMessage(text)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Автоматический скролл вниз списка сообщений\r\n     */\r\n\r\n    const scrollToBottom = () => {\r\n        messagesEndRef.current?.scrollIntoView({behavior: \"smooth\"})\r\n    }\r\n\r\n    /**\r\n     * Функция, которая определяет не пустые ли поля.\r\n     * Затем в случае если все подходит под условия,\r\n     * идет оправка сообщений на сервер и зачищается стейт сообщения\r\n     */\r\n\r\n    const sendMessage = async () => {\r\n        if (userName !== '' && message !== '') {\r\n            firestore.collection('messages').add({\r\n                name: userName,\r\n                text: message,\r\n                createdAt: firebase.firestore.FieldValue.serverTimestamp()\r\n            })\r\n            setMessage('')\r\n        }\r\n    }\r\n\r\n    useEffect(scrollToBottom, [messages]);\r\n\r\n    if (!messages) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className='content'>\r\n            <div className='messages'>\r\n                {messages.map((item, index) => (\r\n                    <Message key={index} name={item.name}\r\n                             text={item.text}/>\r\n                ))}\r\n                <div ref={messagesEndRef}/>\r\n            </div>\r\n            <div className='create'>\r\n                <textarea className='user-name'\r\n                          placeholder='Имя пользователя'\r\n                          value={userName}\r\n                          onChange={e => handleChangeTextarea(e.currentTarget.value, 'user-name')}\r\n                />\r\n                <textarea className='input-message'\r\n                          placeholder='Сообщение'\r\n                          value={message}\r\n                          onChange={e => handleChangeTextarea(e.currentTarget.value, 'input-message')}\r\n                />\r\n                <div className='button'\r\n                     onClick={sendMessage}>\r\n                    Отправить\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\n\nimport {Chat} from \"./pages/Chat/Chat\";\n\nimport './App.css'\n\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Chat/>\n    </div>\n  );\n}\n\nexport default App;\n","import React, {createContext} from 'react';\nimport ReactDOM from 'react-dom';\nimport 'firebase/firestore'\nimport firebase from \"firebase\";\n\nimport App from './App';\n\nimport './index.css';\n\n\nfirebase.initializeApp({\n    apiKey: \"AIzaSyAuXYn0YibaHVzKxqqFZiQhnA9yDxK6s18\",\n    authDomain: \"womanup-test.firebaseapp.com\",\n    projectId: \"womanup-test\",\n    storageBucket: \"womanup-test.appspot.com\",\n    messagingSenderId: \"584080484755\",\n    appId: \"1:584080484755:web:b5a8eb7900229c3ce6e066\",\n    measurementId: \"G-TW9C78PHSW\"\n});\n\nexport const Context = createContext<any>(null)\nconst firestore = firebase.firestore()\n\nReactDOM.render(\n    <React.StrictMode>\n        <Context.Provider value={{\n            firestore\n        }}>\n            <App/>\n        </Context.Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}